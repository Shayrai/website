{"version":3,"sources":["Footer.jsx","common/MultiProgressBar.jsx","Homepage/OriginMarksCard.jsx","Homepage/AltFormsCard.jsx","Homepage/ShinyCard.jsx","Homepage/LangTagsCard.jsx","Homepage/Homepage.jsx","ChildRoutes.jsx","index.js"],"names":["Footer","className","MultiProgressBar","current","max","completed","ProgressBar","variant","now","OriginMarksCard","useState","subcard","setSubcard","Originmark","mark","obtained","getByMarks","entry","hasSublist","entries","map","ListGroup","Item","onClick","identifier","name","RenderCard","list","subCards","header","Card","Header","filter","card","data","AltFormsCard","isShiny","AltForm","getByForms","ShinyCard","Shiny","getByShiny","LangTagsCard","LangTags","getByLangTag","Homepage","Row","Col","xs","sm","md","ChildRoutes","path","exact","Renderable","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d20d050e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './index.scss';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer pad-1-lr\">\r\n      Pokémon © 2002-2022 Pokémon. © 1995-2022 Nintendo/Creatures Inc./GAME FREAK inc. TM, ® and Pokémon character names, as well as all other details contained about Pokémon, are trademarks of Nintendo.\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\n\r\nconst MultiProgressBar = ({\r\n  current,\r\n  max\r\n}) => {\r\n  const completed = max > 0 ? (current / max) * 100 : 100;\r\n\r\n  return (\r\n    <ProgressBar>\r\n      <ProgressBar variant=\"success\" now={completed} key={1}/>\r\n      <ProgressBar variant=\"success\" now={completed} key={1}/>\r\n      <ProgressBar variant=\"danger\" now={100 - completed} key={2}/>\r\n      <div className=\"progressBarLabel\">\r\n        {current} / {max}\r\n      </div>\r\n    </ProgressBar>\r\n  )\r\n}\r\n\r\nexport default MultiProgressBar;\r\n","import React, { useState } from 'react';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport MultiProgressBar from '../common/MultiProgressBar';\r\n\r\nimport styles from './styles.css'\r\n\r\nimport data from '../data/homepageData.json';\r\n\r\nconst OriginMarksCard = () => {\r\n  const [ subcard, setSubcard ] = useState('');\r\n\r\n  const loadSubCard = (identifier) => {\r\n    if (subcard === identifier) {\r\n      setSubcard('');\r\n    } else {\r\n      setSubcard(identifier);\r\n    };\r\n  };\r\n\r\n  const Originmark = ({ mark, obtained, max }) => {\r\n    return (\r\n      <>\r\n        {mark}\r\n        <MultiProgressBar current={obtained} max={max} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getByMarks = (entry, hasSublist) => entry.entries.map((mark) => (\r\n    <>\r\n      <ListGroup.Item key={mark.name}  onClick={() => loadSubCard(mark.name)}>\r\n        <Originmark\r\n          mark={mark.name}\r\n          obtained={mark.obtained}\r\n          max={mark.max}\r\n        />\r\n        {hasSublist && mark.name === subcard && (\r\n          <RenderCard\r\n            list={entry.subCards ?? []}\r\n            header={mark.name}\r\n            identifier={mark.name}\r\n            hasSublist={mark.subCards}\r\n          />\r\n        )}\r\n      </ListGroup.Item>\r\n    </>\r\n  ));\r\n\r\n  const RenderCard = ({ list, header, identifier, hasSublist = true }) => (\r\n    <Card className=\"homeCard marksCard\">\r\n      {hasSublist && <Card.Header>{header}</Card.Header>}\r\n      <ListGroup variant=\"flush\">\r\n        {getByMarks(\r\n          list.filter(\r\n            (entry) => entry.card === identifier\r\n          )[0] ?? {card: identifier, entries: []}, hasSublist)\r\n        }\r\n      </ListGroup>\r\n    </Card>\r\n  )\r\n\r\n  return (\r\n    <RenderCard\r\n      list={data}\r\n      header=\"Origin Marks\"\r\n      identifier=\"OriginMarks\"\r\n    />\r\n  )\r\n};\r\n\r\nexport default OriginMarksCard;","import React, { useState } from 'react';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport MultiProgressBar from '../common/MultiProgressBar';\r\n\r\nimport styles from './styles.css'\r\n\r\nimport data from '../data/homepageData.json';\r\n\r\nconst AltFormsCard = ({ isShiny }) => {\r\n  const [ subcard, setSubcard ] = useState('');\r\n\r\n  const loadSubCard = (identifier) => {\r\n    if (subcard === identifier) {\r\n      setSubcard('');\r\n    } else {\r\n      setSubcard(identifier);\r\n    };\r\n  };\r\n\r\n  const AltForm = ({ mark, obtained, max }) => {\r\n    return (\r\n      <>\r\n        {mark}\r\n        <MultiProgressBar current={obtained} max={max} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getByForms = (entry, hasSublist) => entry.entries.map((mark) => (\r\n    <>\r\n      <ListGroup.Item key={mark.name}  onClick={() => loadSubCard(mark.name)}>\r\n        <AltForm\r\n          mark={mark.name}\r\n          obtained={mark.obtained}\r\n          max={mark.max}\r\n        />\r\n        {hasSublist && mark.name === subcard && (\r\n          <RenderCard\r\n            list={entry.subCards ?? []}\r\n            header={mark.name}\r\n            identifier={mark.name}\r\n            hasSublist={mark.subCards}\r\n          />\r\n        )}\r\n      </ListGroup.Item>\r\n    </>\r\n  ));\r\n\r\n  const RenderCard = ({ list, header, identifier, hasSublist = true }) => (\r\n    <Card className=\"homeCard altFormsCard\">\r\n      {hasSublist && <Card.Header>{header}</Card.Header>}\r\n      <ListGroup variant=\"flush\">\r\n        {getByForms(\r\n          list.filter(\r\n            (entry) => entry.card === identifier\r\n          )[0] ?? {card: identifier, entries: []}, hasSublist)\r\n        }\r\n      </ListGroup>\r\n    </Card>\r\n  )\r\n\r\n  return (\r\n    <RenderCard\r\n      list={data}\r\n      header={`${isShiny ? 'Shiny ' : ''}Alternate Forms`}\r\n      identifier={`${isShiny ? 'Shiny' : ''}AltForms`}\r\n    />\r\n  )\r\n};\r\n\r\nexport default AltFormsCard;","import React, { useState } from 'react';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport MultiProgressBar from '../common/MultiProgressBar';\r\n\r\nimport styles from './styles.css'\r\n\r\nimport data from '../data/homepageData.json';\r\n\r\nconst ShinyCard = () => {\r\n  const [ subcard, setSubcard ] = useState('');\r\n\r\n  const loadSubCard = (identifier) => {\r\n    if (subcard === identifier) {\r\n      setSubcard('');\r\n    } else {\r\n      setSubcard(identifier);\r\n    };\r\n  };\r\n\r\n  const Shiny = ({ mark, obtained, max }) => {\r\n    return (\r\n      <>\r\n        {mark}\r\n        <MultiProgressBar current={obtained} max={max} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getByShiny = (entry, hasSublist) => entry.entries.map((mark) => (\r\n    <>\r\n      <ListGroup.Item key={mark.name}  onClick={() => loadSubCard(mark.name)}>\r\n        <Shiny\r\n          mark={mark.name}\r\n          obtained={mark.obtained}\r\n          max={mark.max}\r\n        />\r\n        {hasSublist && mark.name === subcard && (\r\n          <RenderCard\r\n            list={entry.subCards ?? []}\r\n            header={mark.name}\r\n            identifier={mark.name}\r\n            hasSublist={mark.subCards}\r\n          />\r\n        )}\r\n      </ListGroup.Item>\r\n    </>\r\n  ));\r\n\r\n  const RenderCard = ({ list, header, identifier, hasSublist = false }) => (\r\n    <Card className=\"homeCard marksCard\">\r\n      <Card.Header>{header}</Card.Header>\r\n      <ListGroup variant=\"flush\">\r\n        {getByShiny(\r\n          list.filter(\r\n            (entry) => entry.card === identifier\r\n          )[0] ?? {card: identifier, entries: []}, hasSublist)\r\n        }\r\n      </ListGroup>\r\n    </Card>\r\n  )\r\n\r\n  return (\r\n    <RenderCard\r\n      list={data}\r\n      header=\"Obtainable as a Shiny\"\r\n      identifier=\"Shinies\"\r\n    />\r\n  )\r\n};\r\n\r\nexport default ShinyCard;","import React, { useState } from 'react';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport MultiProgressBar from '../common/MultiProgressBar';\r\n\r\nimport styles from './styles.css'\r\n\r\nimport data from '../data/homepageData.json';\r\n\r\nconst LangTagsCard = () => {\r\n  const [ subcard, setSubcard ] = useState('');\r\n\r\n  const loadSubCard = (identifier) => {\r\n    if (subcard === identifier) {\r\n      setSubcard('');\r\n    } else {\r\n      setSubcard(identifier);\r\n    };\r\n  };\r\n\r\n  const LangTags = ({ mark, obtained, max }) => {\r\n    return (\r\n      <>\r\n        {mark}\r\n        <MultiProgressBar current={obtained} max={max} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getByLangTag = (entry, hasSublist) => entry.entries.map((mark) => (\r\n    <>\r\n      <ListGroup.Item key={mark.name}  onClick={() => loadSubCard(mark.name)}>\r\n        <LangTags\r\n          mark={mark.name}\r\n          obtained={mark.obtained}\r\n          max={mark.max}\r\n        />\r\n        {hasSublist && mark.name === subcard && (\r\n          <RenderCard\r\n            list={entry.subCards ?? []}\r\n            header={mark.name}\r\n            identifier={mark.name}\r\n            hasSublist={mark.subCards}\r\n          />\r\n        )}\r\n      </ListGroup.Item>\r\n    </>\r\n  ));\r\n\r\n  const RenderCard = ({ list, header, identifier, hasSublist = true }) => (\r\n    <Card className=\"homeCard marksCard\">\r\n      <Card.Header>{header}</Card.Header>\r\n      <ListGroup variant=\"flush\">\r\n        {getByLangTag(\r\n          list.filter(\r\n            (entry) => entry.card === identifier\r\n          )[0] ?? {card: identifier, entries: []}, hasSublist)\r\n        }\r\n      </ListGroup>\r\n    </Card>\r\n  )\r\n\r\n  return (\r\n    <RenderCard\r\n      list={data}\r\n      header=\"Language Tags\"\r\n      identifier=\"LangTags\"\r\n    />\r\n  )\r\n};\r\n\r\nexport default LangTagsCard;","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport OriginMarksCard from './OriginMarksCard';\r\nimport AltFormsCard from './AltFormsCard';\r\nimport ShinyCard from './ShinyCard';\r\nimport LangTagsCard from './LangTagsCard'\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <>\r\n      <Row className=\"noMargin\">\r\n        <Col xs={12} sm={6} md={4} className=\"pad-1-t pad-1-l\">\r\n          <OriginMarksCard />\r\n        </Col>\r\n        <Col xs={12} sm={6} md={4} className=\"pad-1-t pad-1-l\">\r\n          <ShinyCard />\r\n        </Col>\r\n        <Col xs={12} sm={6} md={4} className=\"pad-1-t pad-1-l\">\r\n          <LangTagsCard />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"noMargin\">\r\n        <Col xs={12} sm={6} md={4} className=\"pad-1-t pad-1-l\">\r\n          <AltFormsCard isShiny={false} />\r\n        </Col>\r\n        <Col xs={12} sm={6} md={4} className=\"pad-1-t pad-1-l\">\r\n          <AltFormsCard isShiny={true} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Homepage from './Homepage/Homepage';\r\n\r\nconst ChildRoutes = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Homepage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n}\r\nexport default ChildRoutes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Footer from './Footer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ChildRoutes from './ChildRoutes';\r\nimport './index.scss';\r\n\r\nconst Renderable = () => (\r\n  <React.StrictMode>\r\n    <ChildRoutes />\r\n    <Footer />\r\n  </React.StrictMode>\r\n)\r\n\r\n\r\nReactDOM.render(<Renderable />, document.getElementById('root'));\r\n"],"sourceRoot":""}